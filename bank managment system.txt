import java.sql.*;
import java.util.Scanner;

public class Main {
    static String url = "jdbc:mysql://localhost:3306/hem";
    static String username = "root";
    static String password = "3429";

    public static void main(String[] args) throws ClassNotFoundException, SQLException {
        Class.forName("com.mysql.cj.jdbc.Driver");
        System.out.println("Driver loading is Done......");

        try (Connection connection = DriverManager.getConnection(url, username, password)) {
            System.out.println("Database connected......");
            Scanner scanner = new Scanner(System.in);

            while (true) {
                System.out.println("1. Open new account");
                System.out.println("2. Login to your Account");
                System.out.println("3. Deposit balance");
                System.out.println("4. Credit balance");
                System.out.println("5. Account all details");
                System.out.println("6. Change Account PIN number");
                System.out.println("7. Exit");
                System.out.println("Please enter your choice:");
                int choice = scanner.nextInt();

                switch (choice) {
                    case 1:
                        Account_create(connection, scanner);
                        break;
                    case 2:
                        login_Account(connection, scanner);
                        break;
                    case 3:
                        Deposit_account(connection, scanner);
                        break;
                    case 4:
                        credit_account(connection, scanner);
                        break;
                    case 5:
                        all_detail_account(connection);
                        break;
                    case 6:
                        Change_Account_pin(connection, scanner);
                        break;
                    case 7:
                        exit();
                        return;  // Exit the loop and terminate the program
                    default:
                        System.out.println("Invalid choice. Please try again.");
                }
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }

    private static void Account_create(Connection connection, Scanner scanner) {
        String query = "INSERT INTO bank_system1 (account_number, holder_name, holder_email, holder_address_city, holder_address_village, holder_password, holder_balance, deposit_entry, credit_entry) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)";

        try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
            System.out.println("Account number:");
            int account_number = scanner.nextInt();

            System.out.println("Holder name:");
            String holder_name = scanner.next();

            System.out.println("Holder email:");
            String holder_email = scanner.next();

            System.out.println("Holder address city:");
            String holder_address_city = scanner.next();

            System.out.println("Holder address village:");
            String holder_address_village = scanner.next();

            System.out.println("Holder password:");
            String holder_password = scanner.next();

            System.out.println("Holder balance:");
            int holder_balance = scanner.nextInt();

            System.out.println("Deposit entry:");
            int deposit_entry = scanner.nextInt();

            System.out.println("Credit entry:");
            int credit_entry = scanner.nextInt();

            preparedStatement.setInt(1, account_number);
            preparedStatement.setString(2, holder_name);
            preparedStatement.setString(3, holder_email);
            preparedStatement.setString(4, holder_address_city);
            preparedStatement.setString(5, holder_address_village);
            preparedStatement.setString(6, holder_password);
            preparedStatement.setInt(7, holder_balance);
            preparedStatement.setInt(8, deposit_entry);
            preparedStatement.setInt(9, credit_entry);

            preparedStatement.executeUpdate();

            System.out.println("Your account has been created successfully.");
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }

    public static void Deposit_account(Connection connection, Scanner scanner) throws SQLException {
        String debitQuery = "UPDATE bank_system1 SET holder_balance = holder_balance - ? WHERE account_number = ? AND holder_password = ?";
        String creditQuery = "UPDATE bank_system1 SET holder_balance = holder_balance + ? WHERE account_number = ?";

        try {
            connection.setAutoCommit(false);

            System.out.println("Sender account number:");
            int senderAccountNumber = scanner.nextInt();

            System.out.println("Amount to deposit from sender:");
            int depositAmount = scanner.nextInt();

            System.out.println("Sender password:");
            String senderPassword = scanner.next();

            try (PreparedStatement debitStatement = connection.prepareStatement(debitQuery)) {
                debitStatement.setInt(1, depositAmount);
                debitStatement.setInt(2, senderAccountNumber);
                debitStatement.setString(3, senderPassword);

                int rowsAffected = debitStatement.executeUpdate();
                if (rowsAffected > 0) {
                    System.out.println("Amount debited successfully.");

                    System.out.println("Receiver account number:");
                    int receiverAccountNumber = scanner.nextInt();

                    System.out.println("Amount to deposit to receiver:");
                    int receiveAmount = scanner.nextInt();

                    try (PreparedStatement creditStatement = connection.prepareStatement(creditQuery)) {
                        creditStatement.setInt(1, receiveAmount);
                        creditStatement.setInt(2, receiverAccountNumber);

                        creditStatement.executeUpdate();
                        connection.commit();
                        System.out.println("Amount credited successfully.");
                    }
                } else {
                    System.out.println("Failed to debit amount. Rolling back.");
                    connection.rollback();
                }
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
            connection.rollback();
        }
    }

    public static void credit_account(Connection connection, Scanner scanner) throws SQLException {
        String query = "UPDATE bank_system1 SET holder_balance = holder_balance + ? WHERE account_number = ? AND holder_password = ?";

        try {
            System.out.println("Account number:");
            int accountNumber = scanner.nextInt();

            System.out.println("Amount to credit:");
            int creditAmount = scanner.nextInt();

            System.out.println("Password:");
            String password = scanner.next();

            try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
                preparedStatement.setInt(1, creditAmount);
                preparedStatement.setInt(2, accountNumber);
                preparedStatement.setString(3, password);

                int rowsAffected = preparedStatement.executeUpdate();
                if (rowsAffected > 0) {
                    System.out.println("Account credited successfully.");
                } else {
                    System.out.println("Failed to credit account. Please check details.");
                }
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }

    public static void all_detail_account(Connection connection) throws SQLException {
        String query = "SELECT * FROM bank_system1";

        try (Statement statement = connection.createStatement(); ResultSet rs = statement.executeQuery(query)) {
            while (rs.next()) {
                int account_number = rs.getInt("account_number");
                String holder_name = rs.getString("holder_name");
                String holder_email = rs.getString("holder_email");
                String holder_address_city = rs.getString("holder_address_city");
                String holder_address_village = rs.getString("holder_address_village");
                String holder_password = rs.getString("holder_password");
                float holder_balance = rs.getFloat("holder_balance");
                int deposit_entry = rs.getInt("deposit_entry");
                int credit_entry = rs.getInt("credit_entry");

                System.out.println("Account Details:");
                System.out.println("===============================");
                System.out.println("Account Number: " + account_number);
                System.out.println("Holder Name: " + holder_name);
                System.out.println("Holder Email: " + holder_email);
                System.out.println("Holder Address City: " + holder_address_city);
                System.out.println("Holder Address Village: " + holder_address_village);
                System.out.println("Holder Password: " + holder_password);
                System.out.println("Holder Balance: " + holder_balance);
                System.out.println("Deposit Entry: " + deposit_entry);
                System.out.println("Credit Entry: " + credit_entry);
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }

    public static void Change_Account_pin(Connection connection, Scanner scanner) throws SQLException {
        String query = "UPDATE bank_system1 SET holder_password = ? WHERE account_number = ?";

        try {
            connection.setAutoCommit(false);

            System.out.println("New PIN:");
            String newPassword = scanner.next();

            System.out.println("Account Number:");
            int accountNumber = scanner.nextInt();

            try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
                preparedStatement.setString(1, newPassword);
                preparedStatement.setInt(2, accountNumber);

                int rowsAffected = preparedStatement.executeUpdate();
                if (rowsAffected > 0) {
                    connection.commit();
                    System.out.println("Password updated successfully.");
                } else {
                    System.out.println("No rows affected. Please check the account number.");
                    connection.rollback();
                }
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
            connection.rollback();
        }
    }

    public static void login_Account(Connection connection, Scanner scanner) throws SQLException {
        String query = "SELECT * FROM bank_system1 WHERE holder_email = ? AND holder_password = ?";

        try {
            System.out.println("Holder Email:");
            String email = scanner.next();

            System.out.println("Password:");
            String password = scanner.next();

            try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
                preparedStatement.setString(1, email);
                preparedStatement.setString(2, password);

                try (ResultSet resultSet = preparedStatement.executeQuery()) {
                    if (resultSet.next()) {
                        System.out.println("Login successful. Welcome, " + resultSet.getString("holder_name") + "!");
                    } else {
                        System.out.println("Login failed. Invalid email or password.");
                    }
                }
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }

    public static void exit() {
        System.out.println("Thank you for using our application. Visit again!");
    }
}
